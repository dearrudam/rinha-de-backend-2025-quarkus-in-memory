name: Continuous Deployment

on:
  workflow_dispatch:
#  push:
#    branches:
#      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setting up git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "noreply@github.com"
          git config --global credential.helper store
          echo "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com" >> ~/.git-credentials
          

      - name: Versioning the release
        run: |
          ./mvnw release:prepare release:prepare -B
          VERSION=$(./mvnw -f ./target/checkout/pom.xml  help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VersÃ£o release: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build native image
        working-directory: target/checkout/
        run: ./mvnw clean package -Pnative --batch-mode

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        working-directory: target/checkout/
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}
          VERSION=${{ env.VERSION }}
          docker build -f src/main/docker/Dockerfile.native-micro -t $IMAGE_NAME:$VERSION -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
